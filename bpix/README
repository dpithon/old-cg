/**
 * Basic pixmap package (bpix)
 * 
 * - Functions/macros are prefixed with 'bpix_'
 * - Constants are prefixed with 'BPIX_'
 * - First argument of _all_ bpix functions is a struct bpix*
 *
 * - bpix functions return 0 on succes and non-0 on error
 * - on error bpix functions set error field, 
 * - on success error field is unchanged
 * - bpix_get_error(ptr)/bpix_get_errstr(ptr) give last encountered error
 *
 * - color components (red, green, blue) are unsigned char [0:255]
 * 
 **/

#include <stdio.h>
#include <bpix/bpix.h>

int main()
{
	int x, y;
	struct bpix bp;

	/* Create a 320x240 pixmap (max size is BPIX_MAX_W x BPIX_MAX_H) */
	if ( bpix_init(&bp, 320, 240) ) {
		fprintf(stderr, "bpix error: %s\n", bpix_get_errstr(&bp));
		return 1;
	}

	/* Draw a red box */
	for (x = 10; x < 100; x++)
		for (y = 10; y < 100; y++)
			bpix_set(&bp, x, y, 255, 0, 0);

	/* Wrong (x, y) values return error */
	if ( bpix_set(&bp, 2500, 13240, 0, 0, 0) ) {
		fprintf(stderr, "bpix error: %s\n", bpix_get_errstr(&bp));
		bpix_reset_errno(&bp); /* reset error field if program resume */
	} 
		
	/* Save pixmap in "red.pnm" file and free pixmap memory */
	if ( bpix_pnm_write_to_file(&bp, "red.pnm") || 
	     bpix_cleanup(&bp) ) {
		fprintf(stderr, "bpix error: %s\n", bpix_get_errstr(&bp));
		return 1;
	}

	/* bp could be safely reused: bpix_init(&bp, 640, 480); ... */
		
	return 0;
}

/**
 * bpix API Reference
 * 
 **/

#define BPIX_MAX_W	/* max width of pixmap allowed by bpix_init() */
#define BPIX_MAX_H	/* max height of pixmap ... */

					/* Error codes */
#define BPIX_ERR_NONE			/* - No error */
#define BPIX_ERR_PIXMAP_SIZE		/* - Wrong width and/or height values */
#define BPIX_ERR_MALLOC			/* - Failed to malloc() pixmap buffer */
#define BPIX_ERR_OUTSIDE		/* - Out of bound coordinates */
#define BPIX_ERR_BPIX_TO_CAIRO_FAILURE	/* - Failed to create Cairo surface from bpix */
#define BPIX_ERR_CAIRO_TO_BPIX_FAILURE	/* - Failed to initialize bpix from Cairo surface */
#define BPIX_ERR_IO			/* - I/O error */
#define BPIX_ERR_GTK			/* - Gtk+ error */

/* self explanatory macros */
#define bpix_get_width(ptr)
#define bpix_get_height(ptr)
#define bpix_get_errno(ptr)
#define bpix_get_errstr(ptr)
#define bpix_reset_errno(ptr)

int bpix_init(struct bpix *bp, int w, int h);
int bpix_cleanup(struct bpix*);
int bpix_set(struct bpix*, int, int, cval, cval, cval);
int bpix_get(struct bpix*, int, int, cval*, cval*, cval*);
int bpix_pnm_write_to_file(struct bpix*, const char*);

/* graphic context */
struct gctx { 
	cval fg_r, fg_g, fg_b;		/* foreground color */
	cval bg_r, bg_g, bg_b;		/* background color */
};

void bpix_line(struct bpix*, struct gctx*, int, int, int, int);

/**
 * Cairo/Gtk+ integration
 *
 **/
int bpix_cairo_create_surface_from_bpix(struct bpix*, cairo_surface_t**);
int bpix_cairo_create_bpix_from_surface(struct bpix*, cairo_surface_t*);
int bpix_gtkwidget_new(struct bpix*, GtkWidget**);

